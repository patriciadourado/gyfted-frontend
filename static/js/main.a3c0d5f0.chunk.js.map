{"version":3,"sources":["sagas/home.js","actions/index.js","actions/constants.js","sagas/test.js","sagas/feedback.js","sagas/index.js","reducers/home.js","reducers/test.js","reducers/feedback.js","reducers/index.js","containers/home/styles.js","containers/test/styles.js","components/tile/styles.js","components/link.js","components/tile/tile.jsx","containers/home/home.jsx","containers/test/test.js","containers/feedback/styles.js","containers/feedback/feedback.js","App.js","index.js"],"names":["getTestsSaga","action","call","axios","get","API_URL","payload","resp","put","type","data","takeLatest","getTestSaga","process","err","setFeedbackSaga","post","score","rootSaga","all","homeSagas","testSagas","feedbackSagas","initialState","tests","loading","homeReducer","state","test","loaded","feedback","title","combineReducers","Wrapper","styled","div","Root","Progress","SortCheck","Header","section","Button","button","back","css","WrapperButton","TestTitle","h1","LabelTest","Question","label","Answers","useStyles","makeStyles","root","width","height","margin","display","flexDirection","justifyContent","alignItems","boxShadow","actions","paddingBottom","textTransform","fontWeight","paddingTop","Link","color","className","onClick","children","to","style","textDecoration","exact","Tile","_id","classes","Card","key","CardContent","CardActions","connect","dispatch","getTests","useState","checked","setChecked","useEffect","CircularProgress","size","thickness","FormControlLabel","value","labelPlacement","control","Checkbox","onChange","length","sort","x","y","numberOfQuestions","map","getTest","id","getTestAction","match","currentRadioValues","setCurrentRadioValues","redirect","setRedirect","setScore","handleRadioChange","e","question","target","i","parseInt","substring","indexOf","ans","checks","params","quizData","questions","index","Fragment","quizQuestionAnswers","answers","includes","undefined","alert","sum","forEach","answer","pathname","TestResult","p","WrapperFeedback","setFeedback","quizTitle","setFeedbackAction","useLocation","minWidth","fontFamily","App","path","component","Home","Test","Feedback","sagaMiddleware","createSagaMiddleware","middleware","createLogger","collapsed","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3c0d5f0.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { GET_TESTS } from '../actions/constants';\r\nimport { getTestsSuccess } from '../actions/index';\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction* getTestsSaga(action) {\r\n  try {\r\n    const resp = yield call(() => axios.get(API_URL+`/api/tests`, action.payload));\r\n\r\n    yield put(getTestsSuccess(resp.data));\r\n  } catch (error) {}\r\n}\r\n\r\nexport default [takeLatest(GET_TESTS, getTestsSaga)];\r\n","import {\r\n  GET_TESTS,\r\n  GET_TESTS_SUCCESS,\r\n  GET_TEST,\r\n  GET_TEST_SUCCESS,\r\n  GET_TEST_FAILURE,\r\n  SET_FEEDBACK,\r\n  GET_FEEDBACK_SUCCESS,\r\n  GET_FEEDBACK_FAILURE,\r\n} from './constants.js';\r\n\r\nexport const getTests = () => ({\r\n  type: GET_TESTS,\r\n});\r\n\r\nexport const getTestsSuccess = (data) => ({\r\n  type: GET_TESTS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getTestFailure = (err) => ({\r\n  type: GET_TEST_FAILURE,\r\n  err,\r\n});\r\n\r\nexport const getTest = (id) => ({\r\n  type: GET_TEST,\r\n  payload: id,\r\n});\r\n\r\nexport const getTestSuccess = (data) => ({\r\n  type: GET_TEST_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const setFeedback = (id, sum, quizTitle) => ({\r\n  type: SET_FEEDBACK,\r\n  payload: id,\r\n  score: sum,\r\n  title: quizTitle,\r\n});\r\n\r\nexport const getFeedbackSuccess = (data) => ({\r\n  type: GET_FEEDBACK_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const getFeedbackFailure = (err) => ({\r\n  type: GET_FEEDBACK_FAILURE,\r\n  err,\r\n});\r\n","export const GET_TESTS = 'GET_TESTS';\r\nexport const GET_TESTS_SUCCESS = 'GET_TESTS_SUCCESS';\r\nexport const GET_TEST = 'GET_TEST';\r\nexport const GET_TEST_SUCCESS = 'GET_TEST_SUCCESS';\r\nexport const GET_TEST_FAILURE = 'GET_TEST_FAILURE';\r\nexport const SET_FEEDBACK = 'SET_FEEDBACK';\r\nexport const GET_FEEDBACK_SUCCESS = 'GET_FEEDBACK_SUCCESS';\r\nexport const GET_FEEDBACK_FAILURE = 'GET_FEEDBACK_FAILURE';\r\n","import axios from 'axios';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { GET_TEST } from '../actions/constants';\r\nimport { getTestSuccess, getTestFailure } from '../actions/index';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction* getTestSaga(action) {\r\n  try {\r\n    const resp = yield call(() => axios.get(API_URL+`/api/tests/${action.payload}`));\r\n\r\n    yield put(getTestSuccess(resp.data));\r\n  } catch (error) {\r\n    yield put(getTestFailure(error));\r\n  }\r\n}\r\n\r\nexport default [takeLatest(GET_TEST, getTestSaga)];\r\n","import axios from 'axios';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\n\r\nimport { SET_FEEDBACK } from '../actions/constants';\r\nimport { getFeedbackSuccess, getFeedbackFailure } from '../actions/index';\r\nconst API_URL = process.env.REACT_APP_API_URL;\r\n\r\nfunction* setFeedbackSaga(action) {\r\n  try {\r\n    const resp = yield call(() =>\r\n      axios.post(API_URL+`/api/tests/feedback/${action.payload}`, {\r\n        score: action.score,\r\n      })\r\n    );\r\n    yield put(getFeedbackSuccess(resp.data));\r\n  } catch (error) {\r\n    yield put(getFeedbackFailure(error));\r\n  }\r\n}\r\n\r\nexport default [takeLatest(SET_FEEDBACK, setFeedbackSaga)];\r\n","import { all } from 'redux-saga/effects';\r\nimport homeSagas from './home.js';\r\nimport testSagas from './test.js';\r\nimport feedbackSagas from './feedback.js';\r\n\r\nfunction* rootSaga() {\r\n  yield all([...homeSagas, ...testSagas, ...feedbackSagas]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { GET_TESTS, GET_TESTS_SUCCESS } from '../actions/constants';\r\n\r\nconst initialState = {\r\n  tests: null,\r\n  loading: false,\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TESTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        tests: action.payload,\r\n      };\r\n    case GET_TESTS:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default homeReducer;\r\n","import {\r\n  GET_TEST,\r\n  GET_TEST_SUCCESS,\r\n  GET_TEST_FAILURE,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  test: null,\r\n  loading: false,\r\n  loaded: null,\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_TEST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        test: action.payload,\r\n        loaded: true,\r\n      };\r\n    case GET_TEST_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loaded: false,\r\n      };\r\n    case GET_TEST:\r\n      return {\r\n        ...state,\r\n        test: null,\r\n        loading: true,\r\n        loaded: null,\r\n      };\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default homeReducer;\r\n","import {\r\n  SET_FEEDBACK,\r\n  GET_FEEDBACK_SUCCESS,\r\n  GET_FEEDBACK_FAILURE,\r\n} from '../actions/constants';\r\n\r\nconst initialState = {\r\n  feedback: null,\r\n  loading: false,\r\n  loaded: null,\r\n  score: null,\r\n  title: null,\r\n};\r\n\r\nconst homeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_FEEDBACK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        feedback: action.payload,\r\n        title: null,\r\n        score: null,\r\n        loaded: true,\r\n      };\r\n    case GET_FEEDBACK_FAILURE:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loaded: false,\r\n        score: null,\r\n        title: null,\r\n      };\r\n    case SET_FEEDBACK:\r\n      return {\r\n        ...state,\r\n        feedback: null,\r\n        score: action.score,\r\n        title: action.title,\r\n        loading: true,\r\n        loaded: null,\r\n      };\r\n    default:\r\n      return initialState;\r\n  }\r\n};\r\n\r\nexport default homeReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport tests from './home';\r\nimport test from './test';\r\nimport feedback from './feedback';\r\n\r\nexport default combineReducers({\r\n  tests,\r\n  test,\r\n  feedback,\r\n});\r\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: block;\r\n  justify-content: center;\r\n  align-items: center;\r\n  max-width: 1140px;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 800px) {\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: auto;\r\n    padding-left: 30px;\r\n    padding-right: 30px;\r\n  }\r\n\r\n  @media (max-width: 775px) {\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 50%;\r\n    padding: 0 20px;\r\n  }\r\n`;\r\n\r\nexport const Root = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  max-width: 1200;\r\n\r\n  @media (max-width: 800px) {\r\n    display: inherit;\r\n    justify-content: center;\r\n    max-width: auto;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: calc(100vh - 40px);\r\n\r\n  @media (max-width: 800px) {\r\n    width: 50%;\r\n    max-width: auto;\r\n  }\r\n`;\r\n\r\nexport const SortCheck = styled.div`\r\n  display: inline;\r\n  justify-items: right;\r\n  position: relative;\r\n  padding: 2rem 1rem 0 52rem;\r\n  padding-left: 70%;\r\n\r\n  @media (max-width: 800px) {\r\n    padding: 1rem 1rem 0 3rem;\r\n    width: 50%;\r\n  }\r\n`;\r\n","import styled, { css } from 'styled-components';\r\n\r\nexport const Root = styled.div`\r\n  width: 800;\r\n`;\r\n\r\nexport const Header = styled.section`\r\n  display: contents;\r\n`;\r\n\r\nexport const Progress = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  height: calc(100vh - 40px);\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: inline;\r\n  background: linear-gradient(to top, #00018b, #00bdfe);\r\n  box-shadow: 0 10px 10px -2px rgba(0, 0, 0, 0.45);\r\n  border-radius: 20px;\r\n  border: none;\r\n  font-size: 12px;\r\n  font-weight: 10px;\r\n  padding: 10px;\r\n  margin-right: 10px;\r\n  text-align: center;\r\n  color: #ffffff;\r\n  cursor: pointer;\r\n\r\n  ${({ back }) =>\r\n    back &&\r\n    css`\r\n      margin-left: 2px;\r\n      position: absolute;\r\n      justify-content: left;\r\n    `};\r\n`;\r\n\r\nexport const WrapperButton = styled.div`\r\n  display: flex;\r\n  padding-top: 3rem;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const TestTitle = styled.h1`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 800px) {\r\n    font-size: 25px;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const LabelTest = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 20px;\r\n  padding-top: 1rem;\r\n\r\n  @media (max-width: 800px) {\r\n    justify-content: center;\r\n    padding: 0 7rem 1rem;\r\n  }\r\n`;\r\n\r\nexport const Question = styled.label`\r\n  display: block;\r\n  width: 100%;\r\n  padding: 2rem 60rem 0 2rem;\r\n  margin: 0;\r\n  font-size: 25px;\r\n\r\n  @media (max-width: 1056px) {\r\n    padding: 2rem 30rem 0 1rem;\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media (max-width: 800px) {\r\n    padding: 2rem 20rem 0 1rem;\r\n    font-size: 20px;\r\n  }\r\n`;\r\n\r\nexport const Answers = styled.div`\r\n  display: inline-block;\r\n  padding-top: 1rem;\r\n  padding-left: 5rem;\r\n  font-size: 15px;\r\n\r\n  @media (max-width: 1056px) {\r\n    display: block;\r\n    padding-left: 2rem;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media (max-width: 807px) {\r\n    display: block;\r\n    padding-left: 1rem;\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media (max-width: 600px) {\r\n    display: block;\r\n    padding-left: 1rem;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    width: 250,\r\n    height: 250,\r\n    margin: 50,\r\n    display: 'inline-flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    boxShadow: '0px 0px 10px #bbb',\r\n  },\r\n  actions: {\r\n    paddingBottom: '25px',\r\n  },\r\n  button: {\r\n    textTransform: 'capitalize',\r\n  },\r\n  label: {\r\n    display: 'flex',\r\n    fontWeight: 'bold',\r\n    paddingTop: '15px',\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst Link = ({\r\n  color = '#FFFFFF',\r\n  className = {},\r\n  onClick = () => {},\r\n  children,\r\n  to,\r\n}) => (\r\n  <RouterLink\r\n    style={{ textDecoration: 'none', color }}\r\n    className={className}\r\n    onClick={onClick}\r\n    to={to}\r\n    exact={+true}\r\n  >\r\n    {children}\r\n  </RouterLink>\r\n);\r\n\r\nexport default Link;\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { Button } from '../../containers/test/styles.js';\r\n\r\nimport { useStyles } from './styles.js';\r\n\r\nimport Link from '../link';\r\n\r\nconst Tile = ({ _id, title }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card key={title} className={classes.root}>\r\n      <CardContent>\r\n        <div className={classes.label}>{title}</div>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Link to={`/personality-test/${_id}`}>\r\n          <Button>Start</Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport { Progress, Wrapper, Root, SortCheck } from './styles.js';\r\nimport Tile from '../../components/tile/tile';\r\nimport { getTests as getTestsAction } from '../../actions/index';\r\n\r\nconst Home = ({ tests, getTests }) => {\r\n  const [checked, setChecked] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getTests();\r\n  }, [getTests]);\r\n\r\n  if (!tests) {\r\n    return (\r\n      <Progress>\r\n        <CircularProgress size={60} thickness={5} />\r\n      </Progress>\r\n    );\r\n  }\r\n  function handleChange() {\r\n    setChecked(!checked);\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <SortCheck>\r\n        <FormControlLabel\r\n          label='Sort by number of items'\r\n          value='end'\r\n          labelPlacement='end'\r\n          control={\r\n            <Checkbox\r\n              checked={checked}\r\n              onChange={handleChange}\r\n              color='primary'\r\n            />\r\n          }\r\n        />\r\n      </SortCheck>\r\n      <Root>\r\n        {tests.length === 0 ? (\r\n          <div>No available tests</div>\r\n        ) : checked ? (\r\n          tests\r\n            .sort((x, y) =>\r\n              x.numberOfQuestions < y.numberOfQuestions ? 1 : -1\r\n            )\r\n            .map((test) => <Tile {...test} key={test._id} />)\r\n        ) : (\r\n          tests\r\n            .sort((x, y) => (x.title > y.title ? 1 : -1))\r\n            .map((test) => <Tile {...test} key={test._id} />)\r\n        )}\r\n      </Root>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  tests: state.tests.tests,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTests: () => dispatch(getTestsAction()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {\r\n  Root,\r\n  Progress,\r\n  WrapperButton,\r\n  Button,\r\n  TestTitle,\r\n  Header,\r\n  LabelTest,\r\n  Question,\r\n  Answers,\r\n} from './styles.js';\r\nimport Link from '../../components/link.js';\r\n\r\nimport { getTest as getTestAction } from '../../actions/index';\r\n\r\nconst Test = ({ test, getTest, match, loading }) => {\r\n  const [currentRadioValues, setCurrentRadioValues] = useState([]);\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [score, setScore] = useState();\r\n\r\n  const handleRadioChange = (e) => {\r\n    const question = e.target.value;\r\n    const i = parseInt(question.substring(0, question.indexOf('-')));\r\n    const ans = question.substring(question.indexOf('-') + 1);\r\n    const checks = [...currentRadioValues];\r\n    checks[i - 1] = parseInt(ans);\r\n\r\n    setCurrentRadioValues(checks);\r\n  };\r\n\r\n  const handleClearAll = () => {\r\n    setCurrentRadioValues([]);\r\n    setScore(-1);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // e.preventDefault();\r\n    if (\r\n      currentRadioValues.length < test.questions.length ||\r\n      currentRadioValues.includes(undefined)\r\n    )\r\n      alert('Please, answer all the questions!');\r\n    else {\r\n      var sum = 0;\r\n      test.answers.forEach((answer) => {\r\n        currentRadioValues.forEach((checked) => {\r\n          if (answer._id === checked) sum = sum + parseInt(answer.value);\r\n        });\r\n      });\r\n      setScore(sum);\r\n      setRedirect(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTest(match.params.id);\r\n  }, [getTest, match]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Progress>\r\n        <CircularProgress size={60} thickness={5} />\r\n      </Progress>\r\n    );\r\n  }\r\n\r\n  if (!test) {\r\n    return <Root>Failed to load a test</Root>;\r\n  }\r\n\r\n  return (\r\n    <Root>\r\n      <Header>\r\n        <Link to={`/`}>\r\n          <Button back>Back</Button>\r\n        </Link>\r\n        <TestTitle key={test.quizData.title}>{test.quizData.title}</TestTitle>\r\n      </Header>\r\n      <LabelTest>In general, I..</LabelTest>\r\n\r\n      {test.questions\r\n        .sort((x, y) => (x.index > y.index ? 1 : -1))\r\n        .map((question) => (\r\n          <React.Fragment key={question.index}>\r\n            <Question key={question.index}>\r\n              {question.index}. {question.label}{' '}\r\n            </Question>\r\n            {question.quizQuestionAnswers.map((id) =>\r\n              test.answers.map(\r\n                ({ _id, label }) =>\r\n                  _id === id && (\r\n                    <Answers key={question.index + '-' + _id}>\r\n                      <input\r\n                        key={question.index + '-' + _id}\r\n                        id={question.index + '-' + _id}\r\n                        type='radio'\r\n                        value={question.index + '-' + _id}\r\n                        onChange={handleRadioChange}\r\n                        checked={\r\n                          currentRadioValues[question.index - 1] === _id\r\n                            ? true\r\n                            : false\r\n                        }\r\n                      />\r\n                      {_id === 12 || _id === 16 ? (\r\n                        <label key={_id + '-' + label}>\r\n                          I {label} agree nor disagree\r\n                        </label>\r\n                      ) : (\r\n                        <label key={_id + '-' + label}>I {label}</label>\r\n                      )}\r\n                    </Answers>\r\n                  )\r\n              )\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      <WrapperButton>\r\n        <Button onClick={handleSubmit}>Submit Answers</Button>\r\n        <Button onClick={handleClearAll}>Clear all answers</Button>\r\n        {redirect && (\r\n          <Redirect\r\n            to={{\r\n              pathname: `/feedback/${test.quizData._id}`,\r\n              state: { score: score, title: test.quizData.title },\r\n            }}\r\n          />\r\n        )}\r\n      </WrapperButton>\r\n    </Root>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  test: state.test.test,\r\n  loading: state.test.loading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTest: (id) => dispatch(getTestAction(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Test);\r\n","import styled from 'styled-components';\r\nimport { TestTitle } from '../test/styles';\r\n\r\nexport const TestResult = styled.p`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7rem;\r\n  font-size: 20px;\r\n`;\r\n\r\nexport const WrapperFeedback = styled.div`\r\n  & ${TestTitle} {\r\n    padding: 0 20px;\r\n    display: grid;\r\n\r\n    @media (max-width: 800px) {\r\n      justify-content: center;\r\n    }\r\n  }\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport { TestTitle, Progress, Root } from '../test/styles';\r\nimport { TestResult, WrapperFeedback } from './styles';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { setFeedback as setFeedbackAction } from '../../actions/index';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst Feedback = ({ feedback, setFeedback, match, loading }) => {\r\n  const score = useLocation().state.score;\r\n  const title = useLocation().state.title;\r\n\r\n  useEffect(() => {\r\n    setFeedback(match.params.id, score, title);\r\n  }, [setFeedback, match, score, title]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Progress>\r\n        <CircularProgress size={60} thickness={5} />\r\n      </Progress>\r\n    );\r\n  }\r\n\r\n  if (!feedback) {\r\n    return <Root>Failed to load Feedback</Root>;\r\n  }\r\n  return (\r\n    <WrapperFeedback>\r\n      <TestTitle>{title} Feedback</TestTitle>\r\n      <TestResult>{feedback.feedback}</TestResult>\r\n    </WrapperFeedback>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  feedback: state.feedback.feedback,\r\n  title: state.feedback.title,\r\n  score: state.feedback.score,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setFeedback: (id, score, title) =>\r\n    dispatch(setFeedbackAction(id, score, title)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feedback);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Switch, Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport Home from './containers/home/home';\r\nimport Test from './containers/test/test';\r\nimport Feedback from './containers/feedback/feedback';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    paddingTop: 40,\r\n    justifyContent: 'center',\r\n    minWidth: 600,\r\n    margin: 0,\r\n    fontFamily: 'Segoe UI, Roboto, Oxygen, Ubuntu, sans-serif',\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path='/' component={Home} />\r\n          <Route exact path={'/personality-test/:id'} component={Test} />\r\n          <Route exact path={'/feedback/:id'} component={Feedback} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createLogger } from 'redux-logger';\r\nimport rootSaga from './sagas/index';\r\n\r\nimport rootReducer from './reducers';\r\nimport App from './App';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [sagaMiddleware, createLogger({ collapsed: true })];\r\nconst store = createStore(rootReducer, {}, applyMiddleware(...middleware));\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}